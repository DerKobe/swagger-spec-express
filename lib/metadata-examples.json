{
    "tags": [
        "Test"
    ],
    "summary": "Does cool stuff",
    "description": "Longer description about how it does the cool stuff",
    "externalDocs": {
        "description": "Some examples of this operation used in the wild",
        "url": "http://www.google.com"
    },
    "operationId": "5738bb0c61915c74176f65e8",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "parameters": [
        {
            "name": "select",
            "in": "query",
            "description": "Specifies which fields to select. Use a comma without spaces to select multiple fields",
            "type": "string",
            "required": false
        },
        {
            "name": "body",
            "in": "body",
            "model": "appInfo", //can only set one of these
            "arrayOfModel": "appInfo", //can only set one of these
            "schema": { //can only set one of these
                "$ref": "#/definitions/appInfo"
            },
            "description": "The body of the request",
            "type": "object",
            "required": false
        }
    ],
    "responses": {
        "200": {
            "description": "Success" //required
            "model": "appInfo", //can only set one of these
            "arrayOfModel": "appInfo", //can only set one of these
            "schema": { //can only set one of these
                "$ref": "#/definitions/appInfo"
            },
            "commonHeaders": [
                "Correlation-Id" //would be defined by calling root.common.addResponseHeader
            ],
            "headers":{
                "RequestRate" :{
                    "description": "The number of allowed requests in the current period",
                    "type": "integer"
                }
            },
            "examples": {
                "application/json": {
                    "appName": "esb-facade",
                    "version": "1.0.0",
                    "deploymentDate": "2016-08-09T13:36:00.000Z",
                    "environment": "development",
                    "nodeVersion": "v5.9.1"
                }
            }
        }
    },
    "schemes": [
        "https"
    ],
    "deprecated": false,
    "security": true,
    "security1": "api_key", //must be defined in the root of your swagger document at securityDefinitions
    "security2":{
        "api_key": [] //must be defined in the root of your swagger document at securityDefinitions
    },
    "common": {
        "responses": [
            "badRequest" //would be defined by calling root.common.addResponse
        ],
        "parameters": {
            "header": [], //would be defined by calling root.common.parameters.addHeader
            "body": [],//would be defined by calling root.common.parameters.addBody. Can contain model/arrayOfModel/Schema
            "query": [],//would be defined by calling root.common.parameters.addQuery
            "formData": [],//would be defined by calling root.common.parameters.addFormData
            "path": [] //shouldn't need to set these, the code looks for :paramName in the path of the route and adds them here these are added to the code by calling root.common.parameters.addPath
        }
    }
}